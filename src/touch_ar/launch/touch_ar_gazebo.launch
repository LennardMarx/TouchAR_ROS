<?xml version="1.0" ?>
<launch>
  <!-- Set arm_id (for other launches) -->
  <arg name="robot" default="panda" doc="choose your robot. Possible values: [panda, fr3]"/>
  <arg name="arm_id" default="$(arg robot)" />
  
  <!-- Include Gazebo simulation -->
  <include file="$(find franka_gazebo)/launch/panda.launch"/> 
  
  <!-- If controller should be attached on startup: -->
  <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="cartesian_impedance_example_controller"/> -->

  <!-- rviz and reconfiguration tool -->
  <node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_example_controllers)/launch/rviz/franka_description_with_marker.rviz -f $(arg arm_id)_link0 --splash-screen $(find franka_visualization)/splash.png"/>
  <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" required="false" />

  <!-- Controller groups -->
  <rosparam file="$(find touch_ar)/config/_controller_groups.yaml" command="load" />

  <!-- Command line service to receive commands from Unity -->
  <node pkg="touch_ar" type="_command_line_service.py" name="command_line_service" output="screen"/>
</launch>
